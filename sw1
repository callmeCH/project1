import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Example_1 {
	
	private static StringTokenizer st;
	private static int N, K;
	private static int D[][];
	private static long Answer;

	public static void main(String[] args) throws Exception {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int T = Integer.parseInt(br.readLine());
		for (int tc = 1; tc <= T; tc++) {
			st = new StringTokenizer(br.readLine());
			N = Integer.parseInt(st.nextToken());
			K = Integer.parseInt(st.nextToken());
			
			ArrayList<Integer> con[] = new ArrayList[N+1];
			
			for (int i=1 ; i <= N ; i++) {
				con[i] = new ArrayList();
			}
			
			for (int i=1 ; i<= N-1 ; i++) {
				st = new StringTokenizer(br.readLine());
				int a = Integer.parseInt(st.nextToken());
				int b = Integer.parseInt(st.nextToken());
				
				con[a].add(b);
				con[b].add(a);
			}
			
//			for (int i=1; i<=N; i++) {
//				System.out.println(i+"번과 연결된 곳은 = " + con[i]);
//			}
			
			int A[] = new int[N+1];
			st = new StringTokenizer(br.readLine());
			
			for (int i=1; i<= N; i++) {
				A[i] = Integer.parseInt(st.nextToken()); // 0 범죄자 없음, 1 범죄자 있음
			}
			
//			for (int i=1; i<=N ; i++) {
//				System.out.println(i+" 번은... " + A[i]);
//			}
			
			D = new int[N+1][K+1];
			
			for (int i=1; i<=N; i++) {
				D[i][0] = A[i];
			}
			
//			for (int i=1; i<=N; i++) {
//				System.out.println("D["+i+"][0]="+D[i][0]);
//			}
			
			if (K>=1) {
				for (int i=1; i<=N; i++) {
					D[i][1] = D[i][0];
					for (int t : con[i]) {
						D[i][1] += D[t][0];
//						System.out.println("거리가 1일때 "+i+" 번은 "+t+" 번과 연결되서 "+t+" 번의 거리 0일때 값 "+D[t][0]+" 을 더해 "+D[i][1]+" 되었슈");
					}
				}
				
				for (int j=2; j<=K; j++) {
					for (int i=1; i<=N; i++) {
						for (int t:con[i]) {
							D[i][j] += D[t][j-1];
//							System.out.println("거리가 "+j+" 일때 "+i+" 번은 "+con[i].size()+" 개와 연결되서 "+D[i][j-2]+" 이 "+(con[i].size()-1)+" 번 중복 더해졌으므로 때 값 "+(con[i].size()-1) * D[i][j-2]+" 를 빼서 "+D[i][j]+" 되었슈" );
						}
					}
				}
				
				Answer = 0;
				for (int i=1; i<=N ; i++) {
					Answer += D[i][K];
				}
				
				System.out.println("#"+(tc)+" "+Answer);
			}
			
		}
		
	}

}
